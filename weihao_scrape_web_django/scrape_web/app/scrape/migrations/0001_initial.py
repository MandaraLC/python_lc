# Generated by Django 3.2 on 2022-03-19 17:43

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ScrapeConfigAccount',
            fields=[
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='添加时间', verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='更新时间', verbose_name='更新时间')),
                ('scrape_account_id', models.BigAutoField(help_text='爬虫账号配置id', primary_key=True, serialize=False, verbose_name='爬虫账号配置id')),
                ('shipping_company', models.SmallIntegerField(choices=[(1, '马士基Maersk'), (2, '中远海COSOC'), (3, '东方海外OOCL')], help_text='船运公司: (1: 马士基Maersk, 2: 中远海COSOC, 3: 东方海外OOCL)', verbose_name='船运公司')),
                ('account', models.CharField(help_text='账号', max_length=50, verbose_name='账号')),
                ('password', models.CharField(help_text='密码', max_length=50, verbose_name='密码')),
            ],
            options={
                'verbose_name': '爬虫账号配置表',
                'verbose_name_plural': '爬虫账号配置表',
                'db_table': 'scrape_config_account',
            },
        ),
        migrations.CreateModel(
            name='ScrapeResult',
            fields=[
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='添加时间', verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='更新时间', verbose_name='更新时间')),
                ('scrape_result_id', models.BigAutoField(help_text='爬虫任务结果id', primary_key=True, serialize=False, verbose_name='爬虫任务结果id')),
                ('status', models.SmallIntegerField(blank=True, choices=[(-1, '下单失败'), (0, '未下单'), (1, '已下单')], help_text='下单状态', null=True, verbose_name='下单状态')),
                ('container_id', models.CharField(blank=True, help_text='集装箱id', max_length=100, null=True, verbose_name='集装箱id')),
                ('shipping_company', models.SmallIntegerField(choices=[(1, '马士基Maersk'), (2, '中远海COSOC'), (3, '东方海外OOCL')], help_text='船运公司: (1: 马士基Maersk, 2: 中远海COSOC, 3: 东方海外OOCL)', verbose_name='船运公司')),
                ('port_city', models.CharField(help_text='起运港', max_length=100, verbose_name='起运港')),
                ('final_city', models.CharField(help_text='目的港', max_length=100, verbose_name='目的港')),
                ('etd', models.DateTimeField(blank=True, help_text='开航时间', null=True, verbose_name='开航时间')),
                ('eta', models.DateTimeField(blank=True, help_text='到达时间', null=True, verbose_name='到达时间')),
                ('shipping_time', models.IntegerField(blank=True, help_text='航程时间', null=True, verbose_name='航程时间')),
                ('container_type', models.SmallIntegerField(choices=[(1, '20GP/20 Dry Standard'), (2, '40GP/40 Dry Standard'), (3, '40HQ/40 Dry High')], help_text='集装箱类型: (1: 20GP/20 Dry Standard, 2: 40GP/40 Dry Standard, 3: 40HQ/40 Dry High)', verbose_name='集装箱类型')),
                ('commodity', models.CharField(blank=True, help_text='物品名称', max_length=100, null=True, verbose_name='物品名称')),
                ('container_num', models.PositiveIntegerField(default=1, help_text='集装箱个数', verbose_name='集装箱个数')),
                ('weight', models.PositiveIntegerField(blank=True, help_text='集装箱重量', null=True, verbose_name='集装箱重量')),
                ('price', models.PositiveIntegerField(blank=True, help_text='价格', null=True, verbose_name='价格')),
                ('transport_name', models.CharField(blank=True, help_text='航线名称', max_length=100, null=True, verbose_name='航线名称')),
                ('finger_print', models.CharField(blank=True, help_text='去重指纹', max_length=50, null=True, verbose_name='去重指纹')),
                ('batch', models.IntegerField(help_text='批次', verbose_name='批次')),
            ],
            options={
                'verbose_name': '爬虫任务结果表',
                'verbose_name_plural': '爬虫任务结果表',
                'db_table': 'scrape_result',
            },
        ),
        migrations.CreateModel(
            name='ScrapeTask',
            fields=[
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='添加时间', verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='更新时间', verbose_name='更新时间')),
                ('scrape_task_id', models.BigAutoField(help_text='爬虫任务id', primary_key=True, serialize=False, verbose_name='爬虫任务id')),
                ('shipping_company', models.SmallIntegerField(choices=[(1, '马士基Maersk'), (2, '中远海COSOC'), (3, '东方海外OOCL')], help_text='船运公司: (1: 马士基Maersk, 2: 中远海COSOC, 3: 东方海外OOCL)', verbose_name='船运公司')),
                ('port_city', models.CharField(help_text='起运港', max_length=100, verbose_name='起运港')),
                ('final_city', models.CharField(help_text='目的港', max_length=100, verbose_name='目的港')),
                ('early_etd', models.DateTimeField(help_text='最早预计开航时间', verbose_name='最早预计开航时间')),
                ('late_etd', models.DateTimeField(help_text='最晚预计开航时间', verbose_name='最晚预计开航时间')),
                ('container_type', models.SmallIntegerField(choices=[(1, '20GP/20 Dry Standard'), (2, '40GP/40 Dry Standard'), (3, '40HQ/40 Dry High')], help_text='集装箱类型: (1: 20GP/20 Dry Standard, 2: 40GP/40 Dry Standard, 3: 40HQ/40 Dry High)', verbose_name='集装箱类型')),
                ('commodity', models.CharField(blank=True, help_text='物品名称', max_length=100, null=True, verbose_name='物品名称')),
                ('container_num', models.PositiveIntegerField(default=1, help_text='集装箱个数', verbose_name='集装箱个数')),
                ('weight', models.PositiveIntegerField(blank=True, help_text='集装箱重量', null=True, verbose_name='集装箱重量')),
                ('min_price', models.PositiveIntegerField(help_text='最低价格', verbose_name='最低价格')),
                ('max_price', models.PositiveIntegerField(help_text='最高价格', verbose_name='最高价格')),
            ],
            options={
                'verbose_name': '爬虫任务表',
                'verbose_name_plural': '爬虫任务表',
                'db_table': 'scrape_task',
            },
        ),
    ]
